"use strict";(()=>{var e={};e.id=4637,e.ids=[4637],e.modules={20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},8441:(e,t,s)=>{s.r(t),s.d(t,{originalPathname:()=>v,patchFetch:()=>I,requestAsyncStorage:()=>g,routeModule:()=>p,serverHooks:()=>f,staticGenerationAsyncStorage:()=>E});var a={};s.r(a),s.d(a,{DELETE:()=>x,GET:()=>m,POST:()=>l,PUT:()=>c});var r=s(81295),o=s(10829),n=s(50704),i=s(37572);function u(e){let t=e.cookies.get("demo-session");if(!t?.value)return!1;try{let e=decodeURIComponent(t.value),s=JSON.parse(e);return s?.authenticated===!0}catch(e){return console.error("\uD83D\uDD0D DEBUG: Error parsing demo session:",e),!1}}let d=[{id:"default-exam-1",title:"Food & Beverages Services NC II Assessment",certificationType:"Food & Beverages Services NC II",examDate:"2024-02-15",examTime:"09:00",venue:"LPU Cavite - Assessment Center Room 101",maxCandidates:30,registeredCandidates:12,status:"scheduled",registrationDeadline:"2024-02-10",proctor:"Prof. Maria Santos",requirements:["Valid ID","Certificate of Training Completion"],createdAt:"2024-01-15T08:00:00Z"},{id:"default-exam-2",title:"Front Office Services NC II Assessment",certificationType:"Front Office Services NC II",examDate:"2024-02-20",examTime:"14:00",venue:"LPU Cavite - Assessment Center Room 102",maxCandidates:25,registeredCandidates:8,status:"scheduled",registrationDeadline:"2024-02-15",proctor:"Prof. John Dela Cruz",requirements:["Valid ID","Certificate of Training Completion"],createdAt:"2024-01-20T08:00:00Z"}],D=[{id:"default-reg-1",examId:"default-exam-1",studentId:"student-1",studentName:"Demo Student 1",studentEmail:"student1@lpunetwork.edu.ph",registrationDate:"2024-01-16T10:00:00Z",attendanceStatus:"registered",examResult:void 0,score:void 0},{id:"default-reg-2",examId:"default-exam-1",studentId:"student-2",studentName:"Demo Student 2",studentEmail:"student2@lpunetwork.edu.ph",registrationDate:"2024-01-17T14:30:00Z",attendanceStatus:"registered",examResult:void 0,score:void 0}];async function m(e){return(console.log("\uD83D\uDD0D DEBUG: Exams API GET request received"),u(e))?(console.log("\uD83D\uDD0D DEBUG: Exams API - Returning minimal default data:",d.length,"exams,",D.length,"registrations"),i.NextResponse.json({success:!0,exams:d,registrations:D})):(console.log("\uD83D\uDD0D DEBUG: Exams API - No valid demo session"),i.NextResponse.json({error:"Unauthorized"},{status:401}))}async function l(e){if(console.log("\uD83D\uDD0D DEBUG: Exams API POST request received"),!u(e))return console.log("\uD83D\uDD0D DEBUG: Exams API - No valid demo session"),i.NextResponse.json({error:"Unauthorized"},{status:401});try{let t=await e.json();console.log("\uD83D\uDD0D DEBUG: Exams API - Creating exam:",t);let s={id:`exam-${Date.now()}-${Math.random().toString(36).substr(2,9)}`,title:t.title,certificationType:t.certificationType,examDate:t.examDate,examTime:t.examTime,venue:t.venue,maxCandidates:t.maxCandidates,registeredCandidates:0,status:"scheduled",registrationDeadline:t.registrationDeadline,proctor:t.proctor,requirements:t.requirements||["Valid ID","Certificate of Training Completion"],createdAt:new Date().toISOString()};return console.log("\uD83D\uDD0D DEBUG: Exams API - Created exam:",s),i.NextResponse.json({success:!0,exam:s})}catch(e){return console.error("\uD83D\uDD0D DEBUG: Exams API - Error creating exam:",e),i.NextResponse.json({error:"Failed to create exam"},{status:500})}}async function c(e){if(console.log("\uD83D\uDD0D DEBUG: Exams API PUT request received"),!u(e))return console.log("\uD83D\uDD0D DEBUG: Exams API - No valid demo session"),i.NextResponse.json({error:"Unauthorized"},{status:401});try{let t=await e.json();console.log("\uD83D\uDD0D DEBUG: Exams API - Updating exam:",t.id);let s={...t,updatedAt:new Date().toISOString()};return console.log("\uD83D\uDD0D DEBUG: Exams API - Updated exam:",s),i.NextResponse.json({success:!0,exam:s})}catch(e){return console.error("\uD83D\uDD0D DEBUG: Exams API - Error updating exam:",e),i.NextResponse.json({error:"Failed to update exam"},{status:500})}}async function x(e){if(console.log("\uD83D\uDD0D DEBUG: Exams API DELETE request received"),!u(e))return console.log("\uD83D\uDD0D DEBUG: Exams API - No valid demo session"),i.NextResponse.json({error:"Unauthorized"},{status:401});try{let t=await e.json();return console.log("\uD83D\uDD0D DEBUG: Exams API - Deleting exam:",t.id),i.NextResponse.json({success:!0,message:"Exam deleted successfully"})}catch(e){return console.error("\uD83D\uDD0D DEBUG: Exams API - Error deleting exam:",e),i.NextResponse.json({error:"Failed to delete exam"},{status:500})}}let p=new r.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/admin/exams/route",pathname:"/api/admin/exams",filename:"route",bundlePath:"app/api/admin/exams/route"},resolvedPagePath:"C:\\CapstoneProject\\Capstone_Project-main\\src\\app\\api\\admin\\exams\\route.ts",nextConfigOutput:"",userland:a}),{requestAsyncStorage:g,staticGenerationAsyncStorage:E,serverHooks:f}=p,v="/api/admin/exams/route";function I(){return(0,n.patchFetch)({serverHooks:f,staticGenerationAsyncStorage:E})}}};var t=require("../../../../webpack-runtime.js");t.C(e);var s=e=>t(t.s=e),a=t.X(0,[9443,5751],()=>s(8441));module.exports=a})();