"use strict";(()=>{var e={};e.id=2321,e.ids=[2321],e.modules={20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},76341:(e,t,s)=>{s.r(t),s.d(t,{originalPathname:()=>f,patchFetch:()=>C,requestAsyncStorage:()=>g,routeModule:()=>m,serverHooks:()=>v,staticGenerationAsyncStorage:()=>S});var o={};s.r(o),s.d(o,{DELETE:()=>p,GET:()=>u,POST:()=>d,PUT:()=>l});var r=s(81295),n=s(10829),a=s(50704),i=s(37572);let c=[{id:"1",title:"Restaurant Service Operations NC II",code:"RSO101",description:"Learn the fundamentals of restaurant service including table setting, order taking, food and beverage service, and customer service excellence.",category:"Food & Beverages",level:"NC II",duration:160,instructor:"Prof. Maria Santos",enrolledStudents:15,maxStudents:25,totalLessons:12,completedLessons:0,completionRate:75,pendingSubmissions:8,status:"active",coursePassword:"rso2024",allowSelfEnrollment:!0,createdAt:"2024-01-01",updatedAt:"2024-01-15"},{id:"2",title:"Front Desk Operations NC II",code:"FDO102",description:"Comprehensive training in hotel front desk operations, reservations, guest relations, and customer service.",category:"Front Office",level:"NC II",duration:140,instructor:"Ms. Ana Rodriguez",enrolledStudents:18,maxStudents:30,totalLessons:10,completedLessons:0,completionRate:60,pendingSubmissions:12,status:"active",coursePassword:"",allowSelfEnrollment:!0,createdAt:"2024-01-05",updatedAt:"2024-01-20"},{id:"3",title:"Housekeeping Operations NC II",code:"HKO103",description:"Complete training in housekeeping operations including room cleaning, laundry management, and maintenance coordination.",category:"Housekeeping",level:"NC II",duration:120,instructor:"Mrs. Carmen Lopez",enrolledStudents:12,maxStudents:20,totalLessons:8,completedLessons:0,completionRate:80,pendingSubmissions:5,status:"active",coursePassword:"house123",allowSelfEnrollment:!0,createdAt:"2024-01-10",updatedAt:"2024-01-25"},{id:"4",title:"Tourism Services NC II",code:"TSV104",description:"Learn tourism services including tour guiding, destination knowledge, and customer service in tourism industry.",category:"Tourism",level:"NC II",duration:180,instructor:"Mr. Jose Reyes",enrolledStudents:8,maxStudents:15,totalLessons:15,completedLessons:0,completionRate:45,pendingSubmissions:10,status:"active",coursePassword:"",allowSelfEnrollment:!0,createdAt:"2024-01-12",updatedAt:"2024-01-28"},{id:"5",title:"Commercial Cooking NC II",code:"CCK105",description:"Professional cooking techniques, food preparation, kitchen management, and culinary arts fundamentals.",category:"Cookery",level:"NC II",duration:200,instructor:"Chef Roberto Cruz",enrolledStudents:20,maxStudents:25,totalLessons:18,completedLessons:0,completionRate:85,pendingSubmissions:15,status:"active",coursePassword:"cook2024",allowSelfEnrollment:!0,createdAt:"2024-01-15",updatedAt:"2024-02-01"}];async function u(e){try{return i.NextResponse.json({success:!0,courses:c})}catch(e){return console.error("Error fetching courses:",e),i.NextResponse.json({success:!1,error:"Failed to fetch courses"},{status:500})}}async function d(e){try{let t=await e.json(),{title:s,description:o,category:r,level:n,duration:a,instructor:c,maxStudents:u,status:d}=t,l={id:Date.now().toString(),title:s,code:t.code||`${r?.substring(0,3).toUpperCase()}${Math.floor(900*Math.random())+100}`,description:o,category:r,level:n,duration:parseInt(a)||0,instructor:c,enrolledStudents:0,maxStudents:parseInt(u)||0,totalLessons:0,completedLessons:0,completionRate:0,pendingSubmissions:0,status:d,coursePassword:t.coursePassword||"",allowSelfEnrollment:t.allowSelfEnrollment??!0,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()};return i.NextResponse.json({success:!0,course:l})}catch(e){return console.error("Error creating course:",e),i.NextResponse.json({success:!1,error:"Failed to create course"},{status:500})}}async function l(e){try{let{id:t,...s}=await e.json(),o={id:t,...s,updatedAt:new Date().toISOString()};return i.NextResponse.json({success:!0,course:o})}catch(e){return console.error("Error updating course:",e),i.NextResponse.json({success:!1,error:"Failed to update course"},{status:500})}}async function p(e){try{let{id:t}=await e.json();return i.NextResponse.json({success:!0,message:"Course deleted successfully"})}catch(e){return console.error("Error deleting course:",e),i.NextResponse.json({success:!1,error:"Failed to delete course"},{status:500})}}let m=new r.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/admin/courses/route",pathname:"/api/admin/courses",filename:"route",bundlePath:"app/api/admin/courses/route"},resolvedPagePath:"C:\\CapstoneProject\\Capstone_Project-main\\src\\app\\api\\admin\\courses\\route.ts",nextConfigOutput:"",userland:o}),{requestAsyncStorage:g,staticGenerationAsyncStorage:S,serverHooks:v}=m,f="/api/admin/courses/route";function C(){return(0,a.patchFetch)({serverHooks:v,staticGenerationAsyncStorage:S})}}};var t=require("../../../../webpack-runtime.js");t.C(e);var s=e=>t(t.s=e),o=t.X(0,[9443,5751],()=>s(76341));module.exports=o})();